require 'pp'
require 'lib/tumblr'

INITIAL_BLOG_QUEUE = [
    'lukegrecki.com',
    'gastrogirl.tumblr.com'
]

INITIAL_BLOG_QUEUE.each do |blog_domain|
  puts "Starting on #{blog_domain}"
  offset = 0
  raw_blog = Tumblr.get_blog(blog_domain)
  blog = Blog.find_or_create_by_name(raw_blog['name'], :url => raw_blog['url'])
  while true
    raw_posts = Tumblr.get_posts(blog_domain, :offset => offset)

    break if raw_posts.empty?
    puts "I got #{raw_posts.length} entries from #{blog_domain}"

    raw_posts.each do |raw|
      tumblr_id = raw["id"]
      timestamp = raw["timestamp"]
      url = raw["post_url"]
      root_post_id = nil

      if raw["reblogged_root_name"]
        root_blog = Blog.find_or_create_by_name(raw['reblogged_root_name'])
        # If the tumblr post ID isn't provided, parse it from the URL
        root_tumblr_id = URI.parse(raw['reblogged_root_url']).path[%r{/post/(\d+)($|/)}, 1]
        root_post = Post.find_or_create_by_blog_id_and_tumblr_id(
                      root_blog,
                      root_tumblr_id,
                      :reblogged_root_post_id => 0)
        root_post.save!
        root_post_id = root_post.id
      else
        # A root post id of 0 indicates that this post is its own root.
        root_post_id = 0
      end
      
      post = Post.find_or_create_by_blog_id_and_tumblr_id(blog, tumblr_id,
                :timestamp => timestamp,
                :url => url,
                :reblogged_root_post_id => root_post_id
            )
    end

    offset += raw_posts.length
  end
  puts
end

